from math import isqrt
from Crypto.Util.number import long_to_bytes

d = 1869923349658107103149014478500923039450117846215703521555576070557348401482464371778431569211789404811927755190741683406510951474704205951071666327043789
n = 5085035709221528789462868032776017415411263604198256595638151036136947346464824423579974275190760863252678931774723263474504287566633461242247587779320991686066346469258842316695788276459672073787742884356823996685413544434974920940649433225925036235382137261365618602984142523742960278846545140878648407761477
e = 22
c = 2953784977470897964245626118025919525908284733858927071054028381702087388768131904379927259875475544837521900514467434200778686719556344648554814438875692593280002834103132838555591941695566942410702024643793901658737668497348203134085527747779819186302512105495099585630353714650854199799085914078013334139928

sq = lambda x:(lambda y: (y,y*y==x))(isqrt(x))

k = 0
while True:
    k += 1
    a,b = sq(n+(d*d*k*k))
    if not b: continue
    p,q = a-d*k, a+d*k
    break

assert p*q==n
d = pow(e//2,-1,(p-1)*(q-1))
m = pow(c,d,n)
m = pow(m,(((p-1)*(q-1))//4+1)//2,n)
print(long_to_bytes(m))
